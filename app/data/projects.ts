type ProjectData = {
  index: number;
  title: string;
  date: string;
  image: string[];
  description: string;
};
export const projectData: ProjectData[] = [
  {
    index: 1,
    title: "UNCOVER (노카피라이트 음원 스트리밍 서비스)",
    date: "2023-05",
    image: [
      "/uncover_img/067.png",
      "/uncover_img/068.png",
      "/uncover_img/069.png",
      "/uncover_img/070.png",
    ],
    description:
      "저작권이 없는 노카피라이트 음원을 스트리밍 할 수 있으며, 자신만의 플레이리스트를 만들어서 다른 사람들과 공유할 수 있는 스트리밍 서비스입니다. 이론만 들어 감이 오지 않던 타입스크립트를 직접 도입해 본 첫 프로젝트이며, 이외에도 전역상태관리, OAuth 2.0 등의 개념을 한 번 더 깊게 다질 수 있었습니다. 스타일드 컴포넌트를 이용하여 재사용성 높은 스타일드 컴포넌트를 설계를 해 볼 수 있었고, 동적 스타일링 및 조건부 스타일링을 경험하면서 좋은 UI/UX에 대해 고민하는 계기도 되었습니다. 어떤 기능을 구현하냐보다, 사용자의 사용성에 집중해보며 유저친화적인 서비스를 설계하기 위해 고민할 수 있었던 좋은 기회였다고 생각합니다.",
  },
  {
    index: 1,
    title: "UNCOVER (노카피라이트 음원 스트리밍 서비스)",
    date: "2023-05",
    image: [
      "/uncover_img/067.png",
      "/uncover_img/068.png",
      "/uncover_img/069.png",
      "/uncover_img/070.png",
    ],
    description:
      "저작권이 없는 노카피라이트 음원을 스트리밍 할 수 있으며, 자신만의 플레이리스트를 만들어서 다른 사람들과 공유할 수 있는 스트리밍 서비스입니다. 이론만 들어 감이 오지 않던 타입스크립트를 직접 도입해 본 첫 프로젝트이며, 이외에도 전역상태관리, OAuth 2.0 등의 개념을 한 번 더 깊게 다질 수 있었습니다. 스타일드 컴포넌트를 이용하여 재사용성 높은 스타일드 컴포넌트를 설계를 해 볼 수 있었고, 동적 스타일링 및 조건부 스타일링을 경험하면서 좋은 UI/UX에 대해 고민하는 계기도 되었습니다. 어떤 기능을 구현하냐보다, 사용자의 사용성에 집중해보며 유저친화적인 서비스를 설계하기 위해 고민할 수 있었던 좋은 기회였다고 생각합니다.",
  },
  {
    index: 2,
    title: "UNCOVER (노카피라이트 음원 스트리밍 서비스)",
    date: "2023-05",
    image: [
      "/uncover_img/067.png",
      "/uncover_img/068.png",
      "/uncover_img/069.png",
      "/uncover_img/070.png",
    ],
    description:
      "저작권이 없는 노카피라이트 음원을 스트리밍 할 수 있으며, 자신만의 플레이리스트를 만들어서 다른 사람들과 공유할 수 있는 스트리밍 서비스입니다. 이론만 들어 감이 오지 않던 타입스크립트를 직접 도입해 본 첫 프로젝트이며, 이외에도 전역상태관리, OAuth 2.0 등의 개념을 한 번 더 깊게 다질 수 있었습니다. 스타일드 컴포넌트를 이용하여 재사용성 높은 스타일드 컴포넌트를 설계를 해 볼 수 있었고, 동적 스타일링 및 조건부 스타일링을 경험하면서 좋은 UI/UX에 대해 고민하는 계기도 되었습니다. 어떤 기능을 구현하냐보다, 사용자의 사용성에 집중해보며 유저친화적인 서비스를 설계하기 위해 고민할 수 있었던 좋은 기회였다고 생각합니다.",
  },
  {
    index: 3,
    title: "UNCOVER (노카피라이트 음원 스트리밍 서비스)",
    date: "2023-05",
    image: [
      "/uncover_img/067.png",
      "/uncover_img/068.png",
      "/uncover_img/069.png",
      "/uncover_img/070.png",
    ],
    description:
      "저작권이 없는 노카피라이트 음원을 스트리밍 할 수 있으며, 자신만의 플레이리스트를 만들어서 다른 사람들과 공유할 수 있는 스트리밍 서비스입니다. 이론만 들어 감이 오지 않던 타입스크립트를 직접 도입해 본 첫 프로젝트이며, 이외에도 전역상태관리, OAuth 2.0 등의 개념을 한 번 더 깊게 다질 수 있었습니다. 스타일드 컴포넌트를 이용하여 재사용성 높은 스타일드 컴포넌트를 설계를 해 볼 수 있었고, 동적 스타일링 및 조건부 스타일링을 경험하면서 좋은 UI/UX에 대해 고민하는 계기도 되었습니다. 어떤 기능을 구현하냐보다, 사용자의 사용성에 집중해보며 유저친화적인 서비스를 설계하기 위해 고민할 수 있었던 좋은 기회였다고 생각합니다.",
  },
  {
    index: 4,
    title: "UNCOVER (노카피라이트 음원 스트리밍 서비스)",
    date: "2023-05",
    image: [
      "/uncover_img/067.png",
      "/uncover_img/068.png",
      "/uncover_img/069.png",
      "/uncover_img/070.png",
    ],
    description:
      "저작권이 없는 노카피라이트 음원을 스트리밍 할 수 있으며, 자신만의 플레이리스트를 만들어서 다른 사람들과 공유할 수 있는 스트리밍 서비스입니다. 이론만 들어 감이 오지 않던 타입스크립트를 직접 도입해 본 첫 프로젝트이며, 이외에도 전역상태관리, OAuth 2.0 등의 개념을 한 번 더 깊게 다질 수 있었습니다. 스타일드 컴포넌트를 이용하여 재사용성 높은 스타일드 컴포넌트를 설계를 해 볼 수 있었고, 동적 스타일링 및 조건부 스타일링을 경험하면서 좋은 UI/UX에 대해 고민하는 계기도 되었습니다. 어떤 기능을 구현하냐보다, 사용자의 사용성에 집중해보며 유저친화적인 서비스를 설계하기 위해 고민할 수 있었던 좋은 기회였다고 생각합니다.",
  },
  {
    index: 5,
    title: "UNCOVER (노카피라이트 음원 스트리밍 서비스)",
    date: "2023-05",
    image: [
      "/uncover_img/067.png",
      "/uncover_img/068.png",
      "/uncover_img/069.png",
      "/uncover_img/070.png",
    ],
    description:
      "저작권이 없는 노카피라이트 음원을 스트리밍 할 수 있으며, 자신만의 플레이리스트를 만들어서 다른 사람들과 공유할 수 있는 스트리밍 서비스입니다. 이론만 들어 감이 오지 않던 타입스크립트를 직접 도입해 본 첫 프로젝트이며, 이외에도 전역상태관리, OAuth 2.0 등의 개념을 한 번 더 깊게 다질 수 있었습니다. 스타일드 컴포넌트를 이용하여 재사용성 높은 스타일드 컴포넌트를 설계를 해 볼 수 있었고, 동적 스타일링 및 조건부 스타일링을 경험하면서 좋은 UI/UX에 대해 고민하는 계기도 되었습니다. 어떤 기능을 구현하냐보다, 사용자의 사용성에 집중해보며 유저친화적인 서비스를 설계하기 위해 고민할 수 있었던 좋은 기회였다고 생각합니다.",
  },
];
